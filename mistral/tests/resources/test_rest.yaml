Services:
   MyRest:
     type: MISTRAL_REST_API
     parameters:
         baseUrl: http://some_host
     actions:
         create-vm:
           parameters:
               url: /service/action/execute
               method: GET
           task-parameters:
              flavor_id:
              image_id:

         backup-vm:
           parameters:
               url: /url_for_backup
               method: GET
           task-parameters:
               server_id:

         attach-volume:
           parameters:
               url: /url_for_attach
               method: GET
           task-parameters:
               size:
               mnt_path:

         format-volume:
           parameters:
               url: /url_for_format
               method: GET
           task-parameters:
               volume_id:
               server_id:
   Nova:
     type: REST_API
     parameters:
       baseUrl: http://path_to_nova
     actions:
       create-vm:
         parameters:
           url: /url_for_create
         task-parameters:
           flavor_id:
           image_id:
         output:
           select: '$.server_id'
           store_as: vm_id

Workflow:
   tasks:
     create-vms:
         action: MyRest:create-vm
         parameters:
           image_id: 1234
           flavor_id: 42

     attach-volumes:
         requires: [create-vms]
         action: MyRest:attach-volume
         parameters:
           size:
           mnt_path:

     format-volumes:
        requires: [attach-volumes]
        action: MyRest:format-volume
        parameters:
           server_id:

     backup-vms:
        requires: [create-vms]
        action: MyRest:backup-vm
        parameters:
           server_id:

     create-vm-nova:
        action: Nova:create-vm
        parameters:
          image_id: 1234
          flavor_id: 2

     test:
        action: MyRest:backup-vm
        parameters:
          server_id:
        on-success:
          attach-volumes
        on-error:
          backup-vms: $.status != 'OK'

   events:
     create-vms:
        type: periodic
        tasks: create-vms
        parameters:
            cron-pattern: "* * * * *"
